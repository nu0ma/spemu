name: Test

# Development quality assurance workflow
# Runs on PR creation and branch pushes
# For releases, see release-please.yml

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Run gofmt
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted:"
          gofmt -s -l .
          exit 1
        fi
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest
    
    - name: Run staticcheck
      run: staticcheck ./...
    
    - name: Run unit tests
      run: go test -v -race -coverprofile=coverage.out ./pkg/...
    
    - name: Build binary
      run: go build -v -o spemu .
    
    - name: Test go install
      run: |
        go install .
        spemu --help

  integration:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
    
    - name: Start Spanner emulator
      run: |
        docker compose -f docker-compose.test.yml up -d spanner-emulator
        echo "Waiting for emulator to be ready..."
        sleep 10  # Give emulator time to start
        timeout 60 bash -c 'until nc -z localhost 9010; do sleep 2; done'
        echo "Spanner emulator is ready"
    
    - name: Initialize database schema
      env:
        SPANNER_EMULATOR_HOST: localhost:9010
      run: |
        echo "Initializing database schema..."
        go run . --project test-project --instance test-instance --database test-database --init-schema test/schema.sql --verbose
    
    - name: Run integration tests
      env:
        SPANNER_EMULATOR_HOST: localhost:9010
        CI: true
      run: make test-integration
    
    - name: Test with example data
      env:
        SPANNER_EMULATOR_HOST: localhost:9010
      run: |
        echo "Testing dry run..."
        go run . --project test-project --instance test-instance --database test-database --dry-run examples/seed.sql
        echo "Executing DML statements..."
        go run . --project test-project --instance test-instance --database test-database examples/seed.sql --verbose
    
    - name: Stop Spanner emulator
      if: always()
      run: docker compose -f docker-compose.test.yml down
    
    - name: Upload coverage reports
      if: github.event_name == 'push'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests

